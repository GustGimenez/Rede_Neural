/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IU;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Point;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultHighlighter;
import rede_neural.Rede;

/**
 *
 * @author fabio
 */
public class Tela extends javax.swing.JFrame {

    private float[][] entradas;
    private int[] saidasObtidas;
    private ArrayList<Integer> saidas;
    private Automato rede;
    private Neuronio neuronio;
    private Aresta aresta;
    private Rede r;
    private ViewPanel view;
    private ViewPanel view2;
    private ViewPanel view3;
    
    // Variáveis para auxiliar o fluxo de ações da interface
    private boolean treinada;
    private boolean testada;
    private boolean abriuArqTreino;
    private boolean abriuArqTeste;
    



    private DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.CYAN);

    /*
        *Inicializa as Views
        *Deve ser chamado ANTES initComponents
     */
    private void initTela() {
        this.view = new ViewPanel(rede);
        this.view2 = new ViewPanel(rede);
        this.view2.setBackground(Color.white);
        this.view3 = new ViewPanel(rede);
        this.view3.setBackground(Color.white);
    }

    /*
        *Setar valores iniciais dos componentes
        *Deve ser chamado DEPOIS initComponents
     */
    private void setComp() {

        this.view.setBackground(Color.white);
        this.TelaPanel.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        this.TelaPanel.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
    }

    public Tela() {
        rede = new Automato();
        this.initTela();
        initComponents();
        this.setComp();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setVisible(true);
        this.testada = false;
        this.treinada = false;
        this.abriuArqTreino = false;
        this.abriuArqTeste = false;
    }

    /*
        *Herdado do projeto de automatos
     */
    public Tela(Automato a) {
        this.rede = a;
        this.initTela();
        initComponents();
        this.setComp();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Menu = new javax.swing.JPopupMenu();
        PopUpItem1 = new javax.swing.JCheckBoxMenuItem();
        PopUpItem2 = new javax.swing.JCheckBoxMenuItem();
        CriarLabel_PopUpItem3 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        AutomatoLayout = new javax.swing.JPanel();
        PanelAutomato = new javax.swing.JPanel();
        TelaPanel = new javax.swing.JScrollPane(this.view);
        TabelaPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPesos = new javax.swing.JTable();
        salvarPesosBtn = new javax.swing.JButton();
        PanelMatrizConfusao = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        matrizConfusao = new javax.swing.JTable();
        voltarBtn = new javax.swing.JButton();
        EstadosBtnPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        numNeuroniosText = new javax.swing.JTextField();
        numOcultaBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        log = new javax.swing.JRadioButton();
        thip = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        numIt = new javax.swing.JRadioButton();
        erroMax = new javax.swing.JRadioButton();
        numItText = new javax.swing.JTextField();
        erroMaxText = new javax.swing.JTextField();
        treinarRede = new javax.swing.JButton();
        testaRedeBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        File_menu = new javax.swing.JMenu();
        load_menu = new javax.swing.JMenuItem();
        load_teste_menu = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        matriz_confusao_menu = new javax.swing.JMenuItem();

        PopUpItem1.setText("Inicial");
        PopUpItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopUpItem1ActionPerformed(evt);
            }
        });
        Menu.add(PopUpItem1);

        PopUpItem2.setText("Final");
        PopUpItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopUpItem2ActionPerformed(evt);
            }
        });
        Menu.add(PopUpItem2);

        CriarLabel_PopUpItem3.setLabel("Criar Label");
        CriarLabel_PopUpItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CriarLabel_PopUpItem3ActionPerformed(evt);
            }
        });
        Menu.add(CriarLabel_PopUpItem3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        AutomatoLayout.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AutomatoLayout.setLayout(new java.awt.CardLayout());

        TelaPanel.setBackground(new java.awt.Color(204, 204, 204));
        TelaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clique no Neurônio para editar seus pesos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        TelaPanel.setAutoscrolls(true);
        TelaPanel.setPreferredSize(new java.awt.Dimension(600, 600));
        TelaPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                TelaPanelMouseDragged(evt);
            }
        });
        TelaPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TelaPanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TelaPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TelaPanelMouseReleased(evt);
            }
        });
        TelaPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TelaPanelKeyTyped(evt);
            }
        });

        tabelaPesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Neurônio Ligado", "Pesos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPesos.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(tabelaPesos);

        salvarPesosBtn.setText("Salvar mudanças");
        salvarPesosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarPesosBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TabelaPanelLayout = new javax.swing.GroupLayout(TabelaPanel);
        TabelaPanel.setLayout(TabelaPanelLayout);
        TabelaPanelLayout.setHorizontalGroup(
            TabelaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TabelaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(salvarPesosBtn)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TabelaPanelLayout.setVerticalGroup(
            TabelaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salvarPesosBtn)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelAutomatoLayout = new javax.swing.GroupLayout(PanelAutomato);
        PanelAutomato.setLayout(PanelAutomatoLayout);
        PanelAutomatoLayout.setHorizontalGroup(
            PanelAutomatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAutomatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TelaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TabelaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        PanelAutomatoLayout.setVerticalGroup(
            PanelAutomatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAutomatoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TabelaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(PanelAutomatoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TelaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        AutomatoLayout.add(PanelAutomato, "PainelAutomato");
        PanelAutomato.getAccessibleContext().setAccessibleName("");

        matrizConfusao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(matrizConfusao);

        voltarBtn.setText("Voltar");
        voltarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelMatrizConfusaoLayout = new javax.swing.GroupLayout(PanelMatrizConfusao);
        PanelMatrizConfusao.setLayout(PanelMatrizConfusaoLayout);
        PanelMatrizConfusaoLayout.setHorizontalGroup(
            PanelMatrizConfusaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMatrizConfusaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMatrizConfusaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1144, Short.MAX_VALUE)
                    .addGroup(PanelMatrizConfusaoLayout.createSequentialGroup()
                        .addComponent(voltarBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PanelMatrizConfusaoLayout.setVerticalGroup(
            PanelMatrizConfusaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMatrizConfusaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(voltarBtn)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        AutomatoLayout.add(PanelMatrizConfusao, "PainelMatrizConfusao");

        EstadosBtnPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Número de neurônios da camada oculta", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        numOcultaBtn.setText("Alterar");
        numOcultaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numOcultaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(numNeuroniosText, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(numOcultaBtn)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numNeuroniosText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numOcultaBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Função de Transferência", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        buttonGroup1.add(log);
        log.setSelected(true);
        log.setText("Logística");

        buttonGroup1.add(thip);
        thip.setText("Tangente Hiperbólica");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(log)
                    .addComponent(thip))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(log)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(thip))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Condição de Parada", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        buttonGroup2.add(numIt);
        numIt.setSelected(true);
        numIt.setText("Número de Iterações");

        buttonGroup2.add(erroMax);
        erroMax.setText("Erro máximo da rede");

        numItText.setText("200");
        numItText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numItTextActionPerformed(evt);
            }
        });

        erroMaxText.setText("0.001");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(erroMax)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(numIt)
                        .addGap(4, 4, 4)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numItText)
                    .addComponent(erroMaxText, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numIt)
                    .addComponent(numItText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(erroMax)
                    .addComponent(erroMaxText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        treinarRede.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        treinarRede.setText("Treinar Rede");
        treinarRede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treinarRedeActionPerformed(evt);
            }
        });

        testaRedeBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        testaRedeBtn.setText("Testar Rede");
        testaRedeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testaRedeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EstadosBtnPanelLayout = new javax.swing.GroupLayout(EstadosBtnPanel);
        EstadosBtnPanel.setLayout(EstadosBtnPanelLayout);
        EstadosBtnPanelLayout.setHorizontalGroup(
            EstadosBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstadosBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(treinarRede, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(testaRedeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        EstadosBtnPanelLayout.setVerticalGroup(
            EstadosBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EstadosBtnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EstadosBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(testaRedeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(EstadosBtnPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(EstadosBtnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(treinarRede, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39))
        );

        File_menu.setText("Arquivos");

        load_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        load_menu.setText("Carregar Arquivo de Treinamento");
        load_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_menuActionPerformed(evt);
            }
        });
        File_menu.add(load_menu);

        load_teste_menu.setText("Carregar Arquivo de Teste");
        load_teste_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_teste_menuActionPerformed(evt);
            }
        });
        File_menu.add(load_teste_menu);

        jMenuBar1.add(File_menu);

        jMenu1.setText("Rede");

        matriz_confusao_menu.setText("Matriz de Confusão");
        matriz_confusao_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matriz_confusao_menuActionPerformed(evt);
            }
        });
        jMenu1.add(matriz_confusao_menu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AutomatoLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EstadosBtnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(EstadosBtnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AutomatoLayout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TelaPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMouseReleased
        try {
            this.view.getS().setLine(0, 0, 0, 0);
            Point p = this.view.getMousePosition();
            Neuronio v = rede.busca(p.x, p.y);

        } catch (NullPointerException e) {

        } finally {
            this.TelaPanel.updateUI();
        }
    }//GEN-LAST:event_TelaPanelMouseReleased

    private void TelaPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMousePressed
        try {
            if (neuronio != null) {
                this.neuronio.setFocus(false);
            }
            Point p = this.view.getMousePosition();

            this.neuronio = rede.busca(p.x, p.y);
            if (neuronio != null) {
                this.neuronio.setFocus(true);
            }

            this.TelaPanel.repaint();
        } catch (NullPointerException e) {

        }
    }//GEN-LAST:event_TelaPanelMousePressed

    private void TelaPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMouseClicked
        Point p = this.view.getMousePosition();

        this.neuronio = this.rede.busca(p.x, p.y);
        if (neuronio != null) {
            this.neuronio.setFocus(true);
            setTabelaPesos(this.neuronio);
        }

        this.TelaPanel.repaint();
    }//GEN-LAST:event_TelaPanelMouseClicked

    private void TelaPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TelaPanelMouseDragged

    }//GEN-LAST:event_TelaPanelMouseDragged

    private void PopUpItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopUpItem1ActionPerformed

    }//GEN-LAST:event_PopUpItem1ActionPerformed

    private void PopUpItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopUpItem2ActionPerformed

    }//GEN-LAST:event_PopUpItem2ActionPerformed

    private void CriarLabel_PopUpItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CriarLabel_PopUpItem3ActionPerformed

    }//GEN-LAST:event_CriarLabel_PopUpItem3ActionPerformed

    private void TelaPanelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TelaPanelKeyTyped

    }//GEN-LAST:event_TelaPanelKeyTyped

    private void load_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_menuActionPerformed
        int numEntradas;
        int numSaidas = 0;
        BufferedReader in = null;
        ArrayList<ArrayList<Integer>> entradas;
        this.rede.getArestas().clear();
        this.rede.getEntrada().clear();
        this.rede.getSaida().clear();
        this.rede.getOculta().clear();

        JFileChooser jc = new JFileChooser("D:\\Users\\Gi\\Desktop\\Desktop\\BCC\\7SEMESTRE\\IA");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV", "csv");
        jc.setFileFilter(filter);
        int result;
        result = jc.showOpenDialog(null);

        if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
            in = null;

            try {
                String filename = jc.getSelectedFile().getAbsolutePath();
                in = new BufferedReader(new FileReader(filename));

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Arquivo não encontrado");
                return;
            }
        }

        entradas = new ArrayList();
        numEntradas = this.contEntradas(in, entradas);
        this.saidas = new ArrayList();
        numSaidas = this.entradasESaidas(in, numEntradas, entradas);
        this.saidasObtidas = new int[entradas.size()];

        if (numSaidas == 0) {
            JOptionPane.showMessageDialog(null, "Erro ao percorrer o arquivo");
        }

        this.r = new Rede(numEntradas, numSaidas);

        this.entradas = this.r.normalizaEntradas(entradas);

        criarRede();

        this.abriuArqTreino = true;
        this.abriuArqTeste = false;
        this.treinada = false;
        this.testada = false;
    }//GEN-LAST:event_load_menuActionPerformed

    private void numOcultaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numOcultaBtnActionPerformed
        if(!this.abriuArqTreino){
            JOptionPane.showMessageDialog(null, "Abra um arquivo!");
            return;
        }
        
        int numOculta;
        try {
            numOculta = Integer.parseInt(this.numNeuroniosText.getText());

            if (numOculta > this.r.getQtdOculta()) {
                addOculta(numOculta - this.r.getQtdOculta());
            } else if (numOculta < this.r.getQtdOculta()) {
                removeOculta(this.r.getQtdOculta() - numOculta);
            }
            this.r.setQtdOculta(numOculta);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERRO: Entrada inválida !");
        }
    }//GEN-LAST:event_numOcultaBtnActionPerformed

    private void numItTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numItTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numItTextActionPerformed

    private void salvarPesosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarPesosBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) this.tabelaPesos.getModel();
        String aux = this.neuronio.getEstado();
        int tipo;
        ArrayList<Neuronio> neuronios;
        ArrayList<Double> pesos = new ArrayList();

        if (aux.charAt(0) == 'o') {
            tipo = 1;
            neuronios = this.rede.getEntrada();
        } else {
            tipo = 2;
            neuronios = this.rede.getOculta();
        }

        int j = 0;
        for (Neuronio n : neuronios) {
            aux = (String) model.getValueAt(j, 1);
            pesos.add(Double.valueOf(aux));
            j++;
        }

        this.neuronio.setPeso(pesos);

    }//GEN-LAST:event_salvarPesosBtnActionPerformed

    private void treinarRedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treinarRedeActionPerformed
        if(!this.abriuArqTreino){
            JOptionPane.showMessageDialog(null, "Selecione um arquivo de treinamento!");
            return;
        }
        
        boolean funT;

        if (this.log.isSelected()) {
            funT = true;
        } else {
            funT = false;
        }
        //Fiz separado pq não sei como fazer numa função só sem ela ficar enorme
        if (this.erroMax.isSelected()) {
            int num;
            double erro = Double.parseDouble(this.erroMaxText.getText());
            num = this.r.treinaRedeErro(rede, entradas, saidas, funT, erro);
            JOptionPane.showMessageDialog(null, "A rede foi treinada !\nPara " + num + " iterações\n o erro foi de : " + erro);

        } else {//Se for qnt de iterações
            double erro;
            int num = Integer.parseInt(this.numItText.getText());
            erro = this.r.treinaRedeIteracao(rede, entradas, saidas, funT, num);
            JOptionPane.showMessageDialog(null, "A rede foi treinada !\nPara " + num + " iterações\n o erro foi de : " + erro);

        }
        
        this.treinada = true;
    }//GEN-LAST:event_treinarRedeActionPerformed

    private void testaRedeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testaRedeBtnActionPerformed
        if(!this.abriuArqTreino || !this.treinada){
            JOptionPane.showMessageDialog(null, "Antes de testar, treine a rede!");
            return;
        }
        else if(!this.abriuArqTeste){
            JOptionPane.showMessageDialog(null, "Abra o arquivo de teste!");
            return;
        }
        
        boolean funT;
        
        if (this.log.isSelected()) {
            funT = true;
        } else {
            funT = false;
        }
        
        this.saidasObtidas = this.r.testaRede(rede, entradas, saidas, funT); 
        this.testada = true;
    }//GEN-LAST:event_testaRedeBtnActionPerformed

    private void load_teste_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_teste_menuActionPerformed
        if(!this.abriuArqTreino || !this.treinada){
            JOptionPane.showMessageDialog(null, "Antes de abrir o arquivo de testes,"
                    + " treine a rede!");
            return;
        }
        
        int numEntradas;
        int numSaidas;
        ArrayList<ArrayList<Integer>> entradas = new ArrayList();
        BufferedReader in = null;

        JFileChooser jc = new JFileChooser("D:\\Users\\Gi\\Desktop\\Desktop\\BCC\\7SEMESTRE\\IA");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV", "csv");
        jc.setFileFilter(filter);
        int result;
        result = jc.showOpenDialog(null);

        if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
            in = null;

            try {
                String filename = jc.getSelectedFile().getAbsolutePath();
                in = new BufferedReader(new FileReader(filename));

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Arquivo não encontrado");
                return;
            }
        }
        this.saidas = new ArrayList();
        numEntradas = this.contEntradas(in, entradas);
        numSaidas = this.entradasESaidas(in, numEntradas, entradas);

        if (numSaidas == 0) {
            JOptionPane.showMessageDialog(null, "Erro ao percorrer o arquivo");
        }

        this.r.setQtdEntrada(numEntradas);
        this.r.setQtdSaida(numSaidas);

        this.entradas = this.r.normalizaEntradas(entradas);
        
        this.abriuArqTeste = true;
    }//GEN-LAST:event_load_teste_menuActionPerformed

    private void matriz_confusao_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matriz_confusao_menuActionPerformed
        if(!this.testada){
            JOptionPane.showMessageDialog(null, "Teste a rede para verificar a matriz!");
            return;
        }
        
        DefaultTableModel matriz = (DefaultTableModel) this.matrizConfusao.getModel();
        int qtdSaida = this.r.getQtdSaida();
        int[][] matrizConfusa = new int[qtdSaida][qtdSaida];
        
        matriz.setColumnCount(0);
        matriz.setNumRows(0);
        
        matriz.addColumn("Classes/Saídas");
        
        for (int i = 0; i < qtdSaida; i++) {
            matriz.addColumn(i + 1);
        }
        
        matriz.setNumRows(qtdSaida);
        for (int i = 0; i < qtdSaida; i++) {
            matriz.setValueAt(i + 1, i, 0);
        }
        
        for (int i = 0; i < this.saidasObtidas.length; i++) {
            matrizConfusa[this.saidasObtidas[i] - 1][this.saidas.get(i) - 1]++;
        }
        
        for (int i = 0; i < qtdSaida; i++) {
            for (int j = 0; j < qtdSaida; j++) {
                matriz.setValueAt(matrizConfusa[i][j], i, j + 1);
            }
        }
        
        CardLayout card = (CardLayout) this.AutomatoLayout.getLayout();
        card.show(this.AutomatoLayout, "PainelMatrizConfusao");
    }//GEN-LAST:event_matriz_confusao_menuActionPerformed

    private void voltarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarBtnActionPerformed
        // TODO add your handling code here:
        CardLayout card = (CardLayout) this.AutomatoLayout.getLayout();
        card.show(this.AutomatoLayout, "PainelAutomato");
    }//GEN-LAST:event_voltarBtnActionPerformed

    public void addOculta(int num) {
        int qtdOculta = this.r.getQtdOculta();
        addPesosSaida(num);
        num = num + qtdOculta;

        for (int i = qtdOculta; i < num; i++) {
            Neuronio n = new Neuronio(550, (i + 1) * 100, "o" + i, i);
            setPesos(n, this.r.getQtdEntrada());
            this.rede.getOculta().add(n);
            addNovasArestas(n, n.getEstado().charAt(0));
        }

    }

    public void addPesosSaida(int num) {
        for (Neuronio n : this.rede.getSaida()) {
            for (int i = 0; i < num; i++) {
                n.getPeso().add(Math.random());
            }
        }
    }

    public void removeOculta(int num) {
        int qtdOculta = this.r.getQtdOculta() - 1;
        num = qtdOculta - num;
        removePesosSaida(qtdOculta, num);

        for (int i = qtdOculta; i > num; i--) {
            Neuronio n = this.rede.getOculta().get(i);
            this.rede.removeNeuronio(n);

        }
    }

    public void removePesosSaida(int qtd, int num) {
        for (Neuronio n : this.rede.getSaida()) {
            for (int i = qtd; i > num; i--) {
                n.getPeso().remove(i);
            }
        }
    }

    public void addNovasArestas(Neuronio n, char tipo) {
        Aresta a;
        ArrayList<Neuronio> neuronios;

        neuronios = this.rede.getEntrada();

        for (Neuronio nIni : neuronios) {

            a = new Aresta(nIni, n);
            this.rede.addAresta(a);
        }
        
        neuronios = this.rede.getSaida();
        for (Neuronio nIni : neuronios) {

            a = new Aresta(n, nIni);
            this.rede.addAresta(a);
        }

    }

    public void criarRede() {

        int qtdEntrada = this.r.getQtdEntrada();
        int qtdSaida = this.r.getQtdSaida();
        int qtdOculta = this.r.getQtdOculta();

        // Criando os neurônios
        for (int i = 0; i < qtdEntrada; i++) {
            Neuronio n = new Neuronio(150, (i + 1) * 100, "e" + i, i);
            this.rede.getEntrada().add(n);
        }

        // Criando os neuronios da camada de saída, e setando os seus pesos
        for (int i = 0; i < qtdSaida; i++) {
            Neuronio n = new Neuronio(750, (i + 1) * 100, "s" + i, i);
            setPesos(n, qtdOculta);
            this.rede.getSaida().add(n);

        }

        // Criando os neuronios da camada oculta, e setando os seus pesos
        for (int i = 0; i < qtdOculta; i++) {
            Neuronio n = new Neuronio(450, (i + 1) * 100, "o" + i, i);
            setPesos(n, qtdEntrada);
            this.rede.getOculta().add(n);
        }
        addArestas();

        this.TelaPanel.repaint();
    }

    public void setPesos(Neuronio n, int qtd) {

        for (int j = 0; j < qtd; j++) {
            n.getPeso().add(Math.random());
        }

    }

    public void addArestas() {
        ArrayList<Neuronio> entradas = this.rede.getEntrada();
        ArrayList<Neuronio> oculta = this.rede.getOculta();
        ArrayList<Neuronio> saidas = this.rede.getSaida();
        int aux = 0;

        for (Neuronio n : oculta) {
            for (aux = 0; aux < entradas.size(); aux++) {
                this.rede.addAresta(new Aresta(entradas.get(aux), n));
            }

            for (aux = 0; aux < saidas.size(); aux++) {
                this.rede.addAresta(new Aresta(n, saidas.get(aux)));
            }

        }
    }

    public void setTabelaPesos(Neuronio n) {
        int i = 0;
        DefaultTableModel model = (DefaultTableModel) this.tabelaPesos.getModel();

        if (n.getEstado().charAt(0) == 'e') {
            model.setRowCount(0);
            this.salvarPesosBtn.setEnabled(false);
            return;
        }

        this.salvarPesosBtn.setEnabled(true);

        model.setRowCount(n.getPeso().size());

        for (Aresta a : this.rede.getArestas()) {

            if (a.getDestino() == n) {
                model.setValueAt(a.getOrigem().getEstado(), i, 0);
                model.setValueAt(n.getPeso().get(a.getOrigem().getPos()).toString(), i, 1);

                i++;
            }

        }

    }

    public int contEntradas(BufferedReader in, ArrayList<ArrayList<Integer>> entradas) {
        try {
            String line = in.readLine();
            StringTokenizer t1 = new StringTokenizer(line, ",");

            t1.nextToken();
            while (t1.hasMoreTokens()) {
                t1.nextToken();
                entradas.add(new ArrayList());
            }

            return entradas.size();

        } catch (IOException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }

        return 0;
    }

    public int entradasESaidas(BufferedReader in, int numEntradas, ArrayList<ArrayList<Integer>> entradas) {
        try {
            String line, aux;
            StringTokenizer t1;
            int numSaidas = 0;

            while (in.ready()) {
                line = in.readLine();
                t1 = new StringTokenizer(line, ",");

                for (int i = 0; i < numEntradas; i++) {
                    aux = t1.nextToken();
                    entradas.get(i).add(Integer.parseInt(aux));
                }
                aux = t1.nextToken();
                if (!this.saidas.contains(Integer.parseInt(aux))) {
                    numSaidas++;
                }
                this.saidas.add(Integer.parseInt(aux));

            }

            return numSaidas;

        } catch (IOException ex) {
            Logger.getLogger(Tela.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 0;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });

    }

    public class MeuPanel extends javax.swing.JPanel {

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AutomatoLayout;
    private javax.swing.JMenuItem CriarLabel_PopUpItem3;
    private javax.swing.JPanel EstadosBtnPanel;
    private javax.swing.JMenu File_menu;
    private javax.swing.JPopupMenu Menu;
    private javax.swing.JPanel PanelAutomato;
    private javax.swing.JPanel PanelMatrizConfusao;
    private javax.swing.JCheckBoxMenuItem PopUpItem1;
    private javax.swing.JCheckBoxMenuItem PopUpItem2;
    private javax.swing.JPanel TabelaPanel;
    private javax.swing.JScrollPane TelaPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JRadioButton erroMax;
    private javax.swing.JTextField erroMaxText;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem load_menu;
    private javax.swing.JMenuItem load_teste_menu;
    private javax.swing.JRadioButton log;
    private javax.swing.JTable matrizConfusao;
    private javax.swing.JMenuItem matriz_confusao_menu;
    private javax.swing.JRadioButton numIt;
    private javax.swing.JTextField numItText;
    private javax.swing.JTextField numNeuroniosText;
    private javax.swing.JButton numOcultaBtn;
    private javax.swing.JButton salvarPesosBtn;
    private javax.swing.JTable tabelaPesos;
    private javax.swing.JButton testaRedeBtn;
    private javax.swing.JRadioButton thip;
    private javax.swing.JButton treinarRede;
    private javax.swing.JButton voltarBtn;
    // End of variables declaration//GEN-END:variables
}
